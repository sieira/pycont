env:
  DOCKER_COMPOSE_VERSION: 1.24.1

before_install:
  - sudo apt-get update
  - sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-ce
  - docker-compose --version
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose --version

jobs:
  include:
    - stage: "Testing & Linting"
      name: "Markdownlint"
      script:
        - gem install mdl
        - mdl .
    - name: "Pylint"
      script: docker-compose run pycont-test pylint --load-plugins=pylint_django pycont
    - name: "Pycodestyle"
      script: docker-compose run pycont-test pycodestyle pycont
    - name: "Pydocstyle"
      script: docker-compose run pycont-test pydocstyle pycont
    - name: "Unit testing"
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
        - echo UID=$UID > .env
        - echo GID=$GID >> .env
      script:
        - docker-compose up -d mariadb-test
        - docker-compose run pycont-test sh -c "./wait_for_mysql.py && coverage run ./manage.py test tests --noinput --traceback || true && coverage xml"
        - sed -i 's/\/usr\/src\/app\//core\//g' core/cobertura.xml
      after_script:
        - ./cc-test-reporter after-build -p /usr/src/app/pycont -t cobertura --exit-code $TRAVIS_TEST_RESULT core/cobertura.xml
